{"ast":null,"code":"var _jsxFileName = \"/Users/xianghangxi/Github/book-fullstack/books-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport axios from 'axios';\nimport BookList from './components/BookList';\nimport AddEditBookPage from './pages/AddEditBookPage';\nimport Header from './components/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [refreshKey, setRefreshKey] = useState(0);\n  useEffect(() => {\n    fetchBooks();\n  }, [refreshKey]);\n  const fetchBooks = async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/books`);\n      setBooks(response.data);\n    } catch (error) {\n      console.error('Error fetching books:', error);\n      // Handle error here\n    }\n  };\n  const deleteBook = async id => {\n    if (window.confirm('Are you sure you want to delete this book?')) {\n      try {\n        await axios.delete(`${process.env.REACT_APP_API_URL}/books/${id}`);\n        fetchBooks(); // Refresh the books list after deletion\n      } catch (error) {\n        console.error('Error deleting the book:', error);\n      }\n    }\n  };\n\n  // Function to toggle the refreshKey state\n  const triggerRefresh = () => {\n    setRefreshKey(oldKey => oldKey ^ 1); // Simple toggle between 0 and 1\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(BookList, {\n          books: books,\n          deleteBook: deleteBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add\",\n        element: /*#__PURE__*/_jsxDEV(AddEditBookPage, {\n          onActionComplete: triggerRefresh\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 37\n        }, this),\n        exact: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/edit/:id\",\n        element: /*#__PURE__*/_jsxDEV(AddEditBookPage, {\n          onActionComplete: triggerRefresh\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 42\n        }, this),\n        exact: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PW1smnSCsoPk/YvEWNuL6KnKBig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","axios","BookList","AddEditBookPage","Header","jsxDEV","_jsxDEV","App","_s","books","setBooks","refreshKey","setRefreshKey","fetchBooks","response","get","process","env","REACT_APP_API_URL","data","error","console","deleteBook","id","window","confirm","delete","triggerRefresh","oldKey","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onActionComplete","exact","_c","$RefreshReg$"],"sources":["/Users/xianghangxi/Github/book-fullstack/books-frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport axios from 'axios';\nimport BookList from './components/BookList';\nimport AddEditBookPage from './pages/AddEditBookPage';\nimport Header from './components/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n  const [refreshKey, setRefreshKey] = useState(0);\n\n  useEffect(() => {\n    fetchBooks();\n  }, [refreshKey]);\n\n  const fetchBooks = async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/books`);\n      setBooks(response.data);\n    } catch (error) {\n      console.error('Error fetching books:', error);\n      // Handle error here\n    }\n  };\n  const deleteBook = async (id) => {\n    if(window.confirm('Are you sure you want to delete this book?')) {\n      try {\n        await axios.delete(`${process.env.REACT_APP_API_URL}/books/${id}`);\n        fetchBooks(); // Refresh the books list after deletion\n      } catch (error) {\n        console.error('Error deleting the book:', error);\n      }\n    }\n  };\n\n  // Function to toggle the refreshKey state\n  const triggerRefresh = () => {\n    setRefreshKey(oldKey => oldKey ^ 1); // Simple toggle between 0 and 1\n  };\n\n  return (\n    <Router>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<BookList books={books} deleteBook={deleteBook} />} />\n        <Route path=\"/add\" element={<AddEditBookPage onActionComplete={triggerRefresh} />} exact />\n        <Route path=\"/edit/:id\" element={<AddEditBookPage onActionComplete={triggerRefresh} />} exact />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}